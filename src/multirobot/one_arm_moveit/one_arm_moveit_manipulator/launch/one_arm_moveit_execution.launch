<launch>
    <arg name="sim" default="false" />
    <arg name="debug" default="false" />
    <!-- Allow user to specify database location -->
    <arg name="db_path" default="$(find one_arm_moveit_config)/default_warehouse_mongo_db" />
    <!-- By default, we do not start a database (it can be large) -->
    <arg name="demo" default="true" />

    <rosparam command="load" file="$(find one_arm_moveit_manipulator)/config/joint_names.yaml"/>

    <include file="$(find one_arm_moveit_config)/launch/planning_context.launch">
      <arg name="load_robot_description" value="true"/>
    </include>

    <!-- We do not have a robot connected, so publish fake joint states -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="/use_gui" value="false"/>
      <rosparam param="/source_list">[/joint_states]</rosparam>
    </node>

    <!-- New added by Miguel Burgh -->

    <!-- Given the published joint states, publish tf for the robot links -->
    <!--node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" /-->

    <!-- End new added by Miguel Burgh -->

    <include file="$(find one_arm_moveit_manipulator)/launch/move_group.launch">
      <arg name="debug" default="$(arg debug)" />
      <arg name="publish_monitored_planning_scene" value="true"/>
      <!--arg name="info" value="true"/-->
    </include>

    <!-- If database loading was enabled, start mongodb as well -->
    <include file="$(find one_arm_moveit_config)/launch/default_warehouse_db.launch" if="$(arg demo)">
      <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
    </include>

    <!-- Remap follow_joint_trajectory -->
    <remap from="/follow_joint_trajectory" to="/arm_controller/follow_joint_trajectory"/>

    <include file="$(find one_arm_moveit_config)/launch/moveit_rviz.launch">
      <arg name="config" value="true"/>
      <arg name="debug" default="false"/>
    </include>

</launch>
